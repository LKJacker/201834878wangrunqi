from mvanheyn marc vanheyningen subject ripem frequently noted vulnerability archive-name last-update mar some possible attack on ripem thi be a live list of potential weakness to keep ymy eye open for when use ripem for secure electronic mail it do not go into great detail and be almost certainly not exhaustive obviously many of the weakness be weakness of cryptographically secure mail in general and will pertain to secure mail program other than ripem it be maintain by marc vanheyningen mvanheyn it be post monthly to a variety of news group followup pertain specifically to ripem should go to cryptanalysi attack breaking rsa would allow an attacker to find out ymy private key in which case he could read any mail encrypt to you and sign message with ymy private key rsa be generally believe to be resistant to all standard cryptanalytic technique even a standard key about bite with ripem be long enough to render thi impractical bar a huge investment in hardware or a breakthrough in factor breaking de would allow an attacker to read any give message since the message itself be encrypt with de it would not allow an attacker to claim to be you de ha only bite in it key and thu could conceivably be compromise by brute force with sufficient hardware but few agency have such money to devote to simply read one message since each message ha a different de key the work for each message would remain high key management attack stealing ymy private key would allow the same benefit a break rsa to safeguard it it be encrypt with a de key which be derive from a passphrase you type in however if an attacker can get a copy of ymy private keyfile and ymy passphrase by snoop network packet tap line or whatever he could break the whole scheme the main risk be that of transfer either the passphrase or the private key file acros an untrusted link so do do that run ripem on a trust machine preferably one sit right in front of you ideally ymy own machine in ymy own home or maybe office which nobody else ha physical acces to fooling you into accept a bogu public key for someone else could allow an opponent to deceive you into send secret message to him rather than to the real recipient if the enemy can fool ymy intend recipient a well he could re-encrypt the message with the other bogu public key and pa them along it be important to get the proper public key of other person the most common mechanism for thi be finger assume the opponent ha not compromise router or daemon or such finger can be give a fair amount of trust the strongest method of key authentication be to exchange key in person however thi be not alway practical having other person vouch for you by sign a statement contain ymy key be possible although ripem do have feature for do thi a automatically a pgp ripem do generate and check fingerprint of public key in the key file they may be exchange vium a separate channel for authentication playback attack even if an opponent can not break the cryptography an opponent could still cause difficulty for example suppose you send a message with mic-only a pem mode which do not provide disclosure protection to alouse which say ok let do that ymy opponent intercept it and now resend it to bob who now ha a message which be authenticate a from you tell him to do that of course he may interpret it in an entirely different context or ymy opponent could transmit the same message to the same recipient much later figure it would be see differently at a later time or the opponent could change the originator-name to himself register ymy public key a hi and send a message hop the recipient will send him return mail indicate perhap even quote the unknown message to defeat playback attack the plaintext of each message should include some indication of the sender and recipient and a unique identifier typically the date a good front-end script for ripem should do thi automatically imho a a recipient you should be sure that the originator-name header and the sender indicate within the plaintext be the same that you really be a recipient and that the message be not an old one some thi also can and should be automate the author of thi faq ha make a modest attempt at automate the proces of generate and check encapsulate header the program be include in the standard distribution in the util directory local attack clearly the security of ripem can not be greater than the security of the machine where the encryption be perform for example under unix a super-user could manage to get at ymy encrypt mail although it would take some plan and effort to do something like replace the ripem executable with a trojan horse or to get a copy of the plaintext depend how it store in addition the link between you and the machine run ripem be an extension of that if you decrypt with ripem on a remote machine which you be connect to vium network or worse yet modem an eavesdropper could see the plaintext and probably also ymy passphrase ripem should only be execute on system you trust obviously in the extreme case ripem should only be use on ymy own machine which you have total control over and which nobody else ha acces to which ha only carefully examine software know to be free of viruse and so on however there a very real trade-off between convenience and security here a more moderately cautiou user might use ripem on a unix workstation where other person have acces even root acces but increase security by keep private key and the statically link of course executable on a floppy disk some person will keep ripem on a multi-user system but when dial in over an insecure line they will download the message to their own system and perform the ripem decryption there however the security provide by such a mechanism be somewhat illusory since you presumably type ymy cleartext password to log in you just give away the store since the attacker can now log in a you and install trap in ymy account to steal ymy private key next time you use it from a le insecure line thi will likely remain the situation a long a most system use the rather quaint mechanism of cleartext password authentication i find it nice to put a brief statement of how carefully i manage my security arrangement in my plan next to my public key so that potential correspondent can be aware what level of precaution be in place some person use two key a short one which be not carefully manage for ordinary use and a longer one which be treat with greater care for critical correspondence untrusted partner attack ripem encryption will ensure that only a person with the private key correspond to the public key use to encrypt the datum may read the traffic however once someone with that key get the message she may alway make whatever kind of transformation she wish there exist no cryptographic barrier to a recipient say take an encrypted message and convert it to a mic-only message sign by you and readable by anyone although ripem do not provide thi functionality indeed the latest pem draft i have see specifically state that such transformation should be possible to allow forward function to work including the recipient in the plaintext a mention above will make it possible for recipient of a redistribute message to be aware of it original nature naturally the security of the cryptography can never be greater than the security of the person use it 