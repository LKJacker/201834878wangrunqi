from ggr greg rose subject authentication and one-time-pad wa re advanced one time pad in article olson bryan olson cmsc g write the one-time-pad yeild ideal security but ha a well-known flaw in authentication suppose you use a random bite stream a the pad and exclusive-or a the encryption operation if an adversary know the plaintext of a message he can change it into any other message here how it work alouse be send bob a plaintext p under a key stream s alouse compute the ciphertext c s xor p and send it to bob eve know the plainext p but want the message to appear a p eve intercept c and compute c c xor p xor p s xor p eve send c to bob bob decrypt c by compute s p thu receive the false message which wa substitute by eve firstly an aside i agree that the weaknes exist but i have a lot of trouble believe that it represent a difficulty in real life given the purpose of the one-time pad be to give unbreakable security and the expense of key distribution etc imply that the client really do want that level of security these same person want to keep p a secret i find it hard to believe that eve might happen to have a copy of p lie around i be aware that the same argument apply to eve know even a small part of the message but eve must know exactly where which byte in c her know susequence start or the result will be garble i find thi at least a surprise back to the question if i have the resource to use a one-time-pad for such transmission i would also append a message authentication code to the message use up the next bite of the one-time-pad a the key perhap ymy original question basically ask whether there wa any way to authenticate the message with the same degree of security a the pad itself provide and i do know the answer however i would propose the follow for discussion alouse and bob have an arbitrary number of secret random bite to share which eve do know she find them out effectively by know some p and the correspond c it be the fact that they correspond that cause the problem if a message authentication code wa to be create use some one-time-pad operation such that eve could not know which part of the mac be affect by which part of the input she would be unable to forge a mac to correspond what be require be a non-linear combiner of part of the message non-linear so that simply xoring or subtract or whatever do have exactly the same effect now at the end of the encrypt message c alouse append a n-bit mac compute a follow mean the next full chunk of the one time pad compute p xor and pad to an n-bit boundary with more of s break into n-bit chunk set mac to initialisation vector for i in each chunk sequentially set mac mac nlop i at the end of thi proces mac be the message authentication code bob verify the mac in the obviou manner he recover the plaintext p then use some more of hi pad to reproduce the mac in the same manner nlop be the non-linear operator and there be the rub the simplest non-linear operator i can think of be an s-box that be have a fix even publish permutation of the n-bit integer an indexable table call sbox and use x nlop y x xor sbox y practically speak i think thi solf ymy problem a eve never see the intermediate output and hence ca deduce or perform any valid substitution on it also practically speak you want the mac to be fairly large say bite but you might not want a gigabyte say s-box so you might work on byte-sized s-box but i think that be an irrelevant detail for the discussion at hand who will be first to point out my error or give me a pointer to some literature greg rose australian computing and communication institute ggr use of the standard phrase hijacked may be inadvisable caa 