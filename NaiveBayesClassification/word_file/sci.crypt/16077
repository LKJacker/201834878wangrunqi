from ad axel dunkel subject summary how sensible be de toward bit-error hi i like to thank you all for the fast response special thank go to those who reply lexical order marcu j ranum mjr paul crowley pdc pausch paul schlyter tarnold todd w arnold wc bill stewart my question wa how sensible be de encrypt datum toward bite error how much datum per bite will be lose in average i assume you still have the correct key how much of the des-encrypted datum be affect depend on the use encryption mode according to marcu j ranum mjr there be cfb cipher feedback mode ecb electronic code book mode cbc cipher block chain mode ofb output feedback mode each mode do some stuff better than other ofb and cfb be design for communication stream more than for file unfortunally person strongly disagree which mode will lead to destruction of all of the follow datum sure seem that some mode will resync quite fast other will never other will even only effect the very block summarized person say concern thi matter in cbc mode only the current block will be affect tarnold todd w arnold if you use cbc cihper block chaining then the remainder of the datum will be destroy a well pausch paul schlyter in cfb mode de synchronize quite fast probably within block accord to maracu j ranum mjr maybe someone definitely know what happen in which mode nevertheles thank you all very much again axel dunkel i include the response i get from tarnold todd w arnold in cat axel dunkel write how sensible be de encrypt datum toward bite error how much datum per bite will be lose in average i assume you still have the correct key it depend on the mode you use for a single input block a one-bit error will have a percent chance of corrupt each of the output bite in other word it essentially turn the output block into a random number if you encrypt datum in cbc mode however only the one block will be affect the next block and all that follow it will be decrypt properly it a good idea to have some kind of error correction in ymy system if corrupt bite be likely todd from pausch paul schlyter in article cat you write hello how sensible be de encrypt datum toward bite error how much datum per bite will be lose in average i assume you still have the correct key at least byte of datum will be destroy if one bite encrypt datum be in error if you use cbc cihper block chaining then the remainder of the datum will be destroy a well de be very seisitive for single bite error thi be a it should be paul schlyter swedish amateur astronomer society saaf nybrogatan a tr stockholm sweden internet pausch from paul crowley pdc how sensible be de encrypt datum toward bite error how much datum per bite will be lose in average i assume you still have the correct key probably very bad you might lose the rest of the datum stream if you want safety against drop bite use an error correct coder like the freeware gnu ecc o paul crowley pdc trust me i know what i do x fold a fish for jesu from wc how sensible be de encrypt datum toward bite error how much datum per bite will be lose in average i assume you still have the correct key it depend on the mode you use de in electronic code book ecb take a block of input bite and produce output bite so if any bite be change the entire block of bite become bad i forget which feedback mode be which in all of them the result of encrypt one block affect later block with some mode the system self-synchronize so error be repair in a few block with other mode once one block be bad all later block will be bad too there also the frame problem if you have a bite change the block that it in change and maybe later block also change but if you have bite lose or bite add bite in or bite out everything be confuse after that from marcu j ranum mjr depend on the mode you use cfb for example synchronise pretty fast figure a bite error will destroy the current block and the next one mjr experience be what you get if you do get what you want systemberatung axel dunkel koenigsberger strasse d kriftel germany e-mail ad voice fax 