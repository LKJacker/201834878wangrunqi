from trevor trevor bourget ignite subject re repost in sdenni write i post thi a while ago and do receive one reply and now we have another bug report on the same subject can anybody help me out the problem be that motif use xgrabkey to implement menu accelerator and these grab be specific about which modifier apply unfortunately the specification for xgrabkey do allow anymodifier to be combine with other modifier which be exactly what would be desire in thi case ctrl any key q in ora vol in the section on accelerator it say for information on how to specify translation table see vol thi be so you know what to put for the xmnaccelerator resource if you go to vol it say likewise if a modifier be specify there be nothing to prohibit other modifier from be present a well for example the translation shift key q quit will take effect even if the ctrl key be hold down at the same time a the shift key and the q key thi be true for accelerator and mnemonic which be implement use event handler instead of grab it not true for menu accelerator if you a motif implementor i suggest lobby to get the xlib semantic change to support the feature i describe above otherwise change the documentation for menu accelerator to properly set the user expectation because menu accelerator be not the same thing a translation is it possible to supply accelerator for a menu entry if you mean menu accelerator no it not possible that accord to the definition of the xmnaccelerator resource in the xmlabel manual page keep in mind when answer thi question that when use motif you ca use xtinstallaccelerator i ca think of a reason why not how can you ensure that accelerator work the same independent of case what i want be and to both be accelerator on one menu entry there be a workaround for motif user in addition to the normal menu accelerator you install on the xmpushbutton gadget set an xtnaccelerator resource on the shell toplevel or application install the shell accelerator on itself and all of it descendant with xtinstallallaccelerator shell shell for example applicationshell mainwindow menubar filecascade filepulldown openpushbutton exitpushbutton ctrl key o ctrl key q ctrl key o performaction openpushbutton armandactivate n ctrl key q performaction exitpushbutton armandactivate you have to write and add the application action performaction which you can implement by use xtnametowidget on the first argument and then xtcallactionproc with the rest of the argument i test out something similar to thi to shorten development time i use teleuse tuninstallaccelerator resource to install the accelerator on the shell and i directly invoke the open and quit d action instead of ask the pushbutton to do it for me but the more general approach i describe above should work trevor bourget trevor 