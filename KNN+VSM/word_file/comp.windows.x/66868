from art art mulder subject getting more performance out of x faq archive-name last-modified how to maximize the performance of x monthly post compiled by art mulder art more ram faster cpu more disk space faster ethernet these be the standard response you hear when you ask how to improve the performance of ymy workstation well more hardware be alway an option and i wonder if more hardware be alway even a necessity thi faq list be a collection of suggestion and idea from different person on the net on how you can the best possible performance from x window on ymy workstation without purchasing more hardware performance be a highly subjective issue the individual user must balance speed versu feature in order to come to a personal decision therefore thi document can be be expect to contain many subjective opinion in and amongst the objective fact thi document be specifically concern with x there be of course many other factor that can affect the performance of a workstation however they be outside the scope of thi document person seriously interest in the whole area of system performance might want to look at the nutshell handbook system performance tuning by mike loukide i about of the way through read it and it look like a well-written comprehensive treatment of system performance i unaware of any other similar book ed table of content introduction administrivium what about the other x faq window manager the x server which server locking the server into ram starting ymy server font about the resource file define ymy display properly client a better clock for x a better terminal emulator for x tuning ymy client miscellaneou suggestion pretty picture a quicker mouse programming thought say what other source of information author note change since last issue new since last issue introduction administrivium thi document be post each month on or around the to the usenet news group and if you be read a copy of thi faq which be more than a few month old see the last-modified date above you should probably locate the latest edition since the information may be outdated if you do not know how to get those newsgroup ymy site do not receive them thi article ha already expire you can retrieve thi faq from an archive site there exist several usenet faq archive site to find out more about them and how to acces them please see the introduction to the newsgroup post in the main faq archive be at thi document can be find there in if you do not have acces to anonymou ftp you can retrieve it by send a mail message to mail-server with the command send in the message body what about the other x faq david b lewi faq craft maintain the informative and well write frequently asked question document it focu be on general x information while thi faq concentrate on performance the faq do addres the issue of speed but only with regard to the x server the gist of that topic seem to be use it be faster than please see the x faq for complete detail window manager there be a lot of window manager out there with lot of different feature and ability the choice of which to use be by necessity a balance act between performance and useful feature at thi point most respondent have agree upon twm a the best candidate for a speedy window manager a couple of generic trick you can try to soup up ymy window manger be turn off unnecessary thing like zoom and opaque move also if you lay out ymy window in a tile manner you reduce the amount of cpu power spend in raise and lower overlap window joe english joe i find that a good font for tile be aka misc-fixed-medium-r-normal it be the biggest font i know of that i can use on my sun screen and still get two column terminal window side-by-side on the display with no overlap other font suggestion will be accept the x server which server make sure that ymy server be a proper match for ymy hardware if you have a monochrome monitor use a monochrome server on my monochrome sun i have notice much difference between the xsun colmy server and xsunmono however it wa point out to me that xsunmono be about smaller and therefore should contribute to le page thank to jonny farringdon michael salmon how ymy server wa compile can also make a difference jeff law law advise u that on a sun system x should be compile with gcc version or with the unbundled sun compiler you can expect to get very large speedup in the server by not use the bundle suno compiler i assume that similar result would occur if you use one of the other high-quality commercial compiler on the market locking the server into ram ha anyone try hack the x server so that it be lock into ram and do not get page eg vium a call to plock do thi help performance at all i have one inquiry on thi topic and a few pointer to the plock function call but no hard evidence from someone who try it i be not in a position to give it a try thank to eric c claey ecc danny backx db juan d martin juando starting ymy server joe english joe if you start up a lot of client in ymy xsession or whatever sleep for a second or two after launch each one after i change my xclient script to do thi log in actually take le time we have a heavily load system without much core though thi sound crazy but i have confirm that it work warner losh imp provide me with a good explanation of why thi work which i have summarize here when you start up an x server it take a huge amount of time to start accept connection a lot of initialization be do by the server when it start thi proces touch a large number of page any other proces run at the same time would fight the server for use of the cpu and more importantly memory if you put a sleep in there you give the server a chance to get itself sort out before the client start up similarly there be also a lot of initialization whenever an x client program start toolkit register widget resource be fetch program initialize state and databasis and so forth all thi activity be typically memory intensive once thi initialization be do the proces ha reach a steady state the memory usage typically settle down to use only a few page by use sleep to stagger the launch of ymy client in ymy xinitrc you avoid them fight each other for ymy workstation limit resource thi be most definitely a ymy mileage may vary situation a there be so many variable to be consider available ram local swap space load average number of user on ymy system which client you be start etc currently in my xinitrc i have a situation like sleep exec xclock sleep exec xbiff sleep exec xterm sleep exec xterm i experiment with sleep exec xclock sleep exec xbiff sleep exec xterm sleep exec xterm i even try sleep exec and then in i have sleep exec xclock sleep exec xbiff sleep exec xterm sleep exec xterm the idea with thi last one wa to make sure that xinit have completely finish process my xinitrc and have settle down into a steady state before the sleep expire and all my client be launch all of these yield fairly comparable result and so i just stick with my current setup for it simplicity you will probably have to experiment a bite to find a setup which suit you font loading font take time and ram if you minimize the number of font ymy application use you get speed increase in load-up time one simple strategy be to choose a small number of font one small one large one roman whatever suit you and configure all ymy client or at least all ymy heavily use client to use only those few font client program should start up quicker if their font be already load into the server thi will also conserve server resource since fewer font will be load by the server farrell mckay fbm joe english joe eg my main xterm font be so i also have twm set up to use in all it menu and icon etc twm default font be since i do normally use i eliminate one font from my server oliver jone oj keep font local to the workstation rather than load them over nf if you will make extensive use of scalable font use a font server about the resource file keep ymy xresource xdefault file small save ram and save on server startup time joe english joe one suggestion in ymy xdefault xresource file try put only the minimum number of resource that you want to have available to all of ymy application for example reversevideo true then separate ymy resource into individual client-specific resource file for example in ymy login file set the environment variable xuserfilesearchpath setenv xuserfilesearchpath n the frequently asked question faq contain an excellent explanation of how these environment variable work ed so when xterm launch it load it resource from xdvus find them in and so on and so forth note that not all client follow the same xxxxx resource-file name pattern you can check in ymy system app-default directory often to find the proper name and then name ymy personal resource file with the same name thi be all document in the xt specification pg thank to kevin samborn samborn michael urban urban and mike long mikel kevin be will mail hi setup file to inquirer thi method of organize ymy personal resource ha the follow benefit easier to maintain more usable fewer resource be store in the x server in the property a a side benefit ymy server may start fractionally quicker since it doesn t have to load all ymy resource application only proces their own resource never have to sort through all of ymy resource to find the one that affect them it also ha drawback the application that you be interest in ha to load an additional file every time it start up thi do seem to make that much of a performance difference and you might consider thi a huge boon to usability if you be modify an application resource database you just need to re-run the application without have to xrdb again xrdb will by default run ymy xdefault file through cpp when ymy resource be split out into multiple resource file and then load by the individual client program they will not watch out for thi i have c style comment in my xdefault file which cpp strip out when i switch to thi method of distribute resource file i spend several frustrate day try to figure out why my client be not find their resource xt do not provide any error message when it encounter the c style comment in the resource file it simply silently abort process the resource file the los of preprocessing which can be very handy ifdef color be enough to cause some person to dismis thi method of resource management you may also run into some client which break the rule for example neither emac nor xvt will find their resource if they be anywhere other than in xdefault when start up a client on a machine that do not share file with the machine where ymy resource be store ymy client will not find it resource loading all ymy resource into the server will guarantee that all of ymy client will alway find their resource casey leedom casey a possible compromise suggestion that i have and be plan on try be to put resource for all my heavily use client eg xterm into my xdefault file and to use the separate resource file method for client that i seldom use define ymy display properly client program be often execute on the same machine a the server in that situation rather than set ymy display environment variable to hostname where hostname be the name of ymy workstation you should set ymy display variable to or by do thi you acces optimize routine that know that the server be on the same machine and use a share memory method of transfer request thank to patrick j horgan see the display name section of the x man page for further explanation of how to properly set ymy display name i do think it stock mit but at least datum general and hp have library that be smart enough to use local communication even when the display be set specially rob sartin sartin jody goldberg jody send me an xlib patch to change stock to use local communication even if display be not properly set i do want to get in the busines of distribute or try to juggle non-mit patch and so have elect not to include it here hopefully mit will apply thi minor line patch themself in the meantime if you want to try it yourself email jody ed client if you only have a few megabyte of ram then you should think carefully about the number of program you be run think also about the kind of program you be run for example is there a smaller clock program than xclock unfortunately i have really notice that program advertise how large they be so the onu be on u to do the research and spread the word suggestion on better alternative to the some of the standard client eg xclock xterm xbiff be welcome ed i receive some contradictory advice from person on the subject of x client program some advocate the use of program that be strictly xlib base since xt xaw and other toolkit be rather large other warn u that other application which you be use may have already load up one or more of these share library in thi case use a non-xt for example client program may actually increase the amount of ram consume the upshot of all thi seem to be do mix toolkit that be try and use just athena client or just xview client or just motif client etc if you use more than one then you drag in more than one toolkit library know ymy environment and think carefully about which client program would work best together in that environment thank to rob sartin sartin duncan sinclair sinclair sinclair a better clock for x xcuckoo suggest by duncan sinclair sinclair available on xcuckoo display a clock in the title bar of another program save screen real estate mclock suggest by der mouse mouse available in non xt-based extensively configurable it can be make to look very much like mit oclock or mostly like xclock purely by change resource of course the ultimate clock one that consume no resource and take up no screen real estate be the one that hang on ymy wall a better terminal emulator for x from the readme file distribute with xterm abandon all hope ye who enter here thi be undoubtedly the most ugly program in the distribution ugly maybe but at my site it still the most use i suspect that xterm be one of the most use client at many if not most site lazines is there a better terminal emulator available see below if you must use xterm you can try reduce the number of saveline to reduce memory usage oliver jone oj jonny farringdon xvt suggest by richard hesketh available in if you do need all the esoteric feature of xterm then get hold of xvt it wa write here just to save swap space a xterm be rather a hog thi wa write a a partial of xterm you do have to rename ymy resource a xvt pretend to be xterm in it current version you can not bind key a you can in xterm i hear that there be version of xvt with thi feature but i not find any yet update march i recently have a few email conversation with brian warkentin regard xvt he question whether xvt really be at all faster than xterm for instance xvt may initialize slightly faster but compare scroll speed try thi quickie benchmark dd and see which program can scroll faster also while xterm may be slightly larger in ram requirement we do have any hard number here do anyone else share library and share text segment mean that xterm page requirement be not that major a an experiment he rip out all the tek stuff from xterm but it make little difference since if you never use it it never get bring into memory so here we stand with some conflict report on the validity of xvt over xterm in summary caveat emptor ymy mileage may vary if you can provide some hard datum i like to see it specifically how much ram each occupy how much swap each need relative speed of each mterm suggest by der mouse mouse available in i also have my own terminal emulator it major lack be scrollback but some person like it anyway tuning ymy client suggestion on how you can tune ymy client program to work faster from scott barman scott come a suggestion regard motif text field widget i notice that during datum entry into motif text field widget i wa get a slight lag in response to some keystroke particularly the initial one in the field examining the what wa go on with xscope i find it it seem that when the resource xmnblinkrate be non-zero and the focu be on a text field widget or even just a text widget the i-beam cursor will blink every time the cursor appear or disappear in those widget the widget code be make a request to the server copyarea the user can stop thi by set the resource xmnblinkrate to it be not noticeable on a sparc but it do make a little difference on a slower system thi specific suggestion can probably be apply in general to lot of area consider ymy heavily use client be there any minor embellishment that can be turn off and thereby save on server request miscellaneou suggestion pretty picture do use large bitmap gif etc a root window background the more complicate ymy root window bitmap the slower the server be at redrawing ymy screen when you reposition window or redraw etc these take up ram and cpu power i work on a sun sparc and i consciou of performance issue i ca comprehend it when i see person with a sun run xphoon a their root window i let someone else figure out how much ram would be occupy by have a full screen root image on a colmy workstation if you anything like me you need all the screen real estate that you can get for client and so rarely see the root window anyway thank to qiang alex zhao azhao for remind me of thi one ed a quicker mouse using xset you can adjust how fast ymy pointer move on the screen when you move ymy mouse i use xset m in my xinitrc file which let me send my pointer acros the screen with just a flick of the wrist see the xset man page for further idea and information hint sometime you may want to slow down ymy mouse track for fine work to cover my option i have place a number of different mouse set command into a menu in my window manager for twm menu mouse set mouse setting very fast xset m normal fast xset m system default un-accelerated xset m default glacial xset m programming thought joe english joe to speed up application that you develop there be ton of thing you can do some that stick out for motif program do set xmfontlist resource for individual button label list et al use the defaultfontlist or labelfontlist or whatever resource of the highest-level manager widget again stick to a few font a possible better yet do use motif at all it an absolute pig do create and destroy widget on the fly try to reuse them thi will avoid many problem with buggy toolkit too use a line width of in gc on some server thi make a huge difference compres and collapse multiple expose event thi can make the difference between a fast application and a completely unusable one francoi stae fran just a small remark i once hear that use a better malloc function would greatly increase performance of xt base application since they use malloc heavily they suggest try out the gnuy malloc but i do find the time yet i do some test on small program just do malloc and free and the difference be indeed very noticeable somewhat time faster any confirmation on thi from anyone ed andre beck unnecessary noexpose event most person use a fastest blit routine but they forget to reset in the gc use for the blit thi will cause a noexpose event every blit that in most case only put load onto the connection and force the client to run through it event-loop again and again thousand of xchangegc request thi gfx context switching be also see in most handcoded x-app where only one or few gc be create and then heavily change again and again xt use a definitely better mechanism by cache and share a lot of gc with all need parameter thi will remove the load of subsequent xchangegc request from the connection by move it toward the client startup phase say what some contributor propose idea that seem right off the wall at first david b lewi by day dbl by night david craft how about thi swap display with someone else run all ymy program on the other machine and display locally the other user run off ymy machine onto the other display goal reduce context switch in the same operation between client and server i not in a situation where i can easily try thi but i have receive the follow confirmation michael salmon i regularly run program on other machine and i notice a big difference i try to run on a machine where i will reduce net usage and usually with nice to reduce the impact of my intrusion thi help a lot on my poor little with only mb it wa essential when i only have mb casey leedom casey the server and the client be compete for the same cpu a ymy server when you run it on the same machine not really a major problem except that the client and the server be in absolute synchronicity and be context thrash timothy h panton thp firstly it rely on the fact that most cpu be mostly idle x cpu usage be bursty so the chance of you and ymy teammate do something cpu-intensive at the same time be small if they be not then you get twice the available for ymy action the second factor be that context switch be expensive use cpu half them you pay a price due to the overhead of go over the network but thi be offset in most case by the improve buffer of a network typically v for a pipe allow even fewer context switch other source of information volume in x window system series x window system administrator guide be a book all x administrator should read adrian nye adrian a lot more tip on performance be in the paper improving x application performance by chri d peterson and sharon chang in issue of the x resource an earlier version of thi paper appear in the xhibition conference proceed thi paper be absolutely essential read for x programmer author note thi list be currently maintain by art mulder art suggestion correction or submission for inclusion in thi list be gladly accept layout suggestion and comment spell mistak too be also welcome currently i have list all contributor of the variou comment and suggestion if you do not want to be credit please tell me speedup-x-faq be copyright c by arthur e mulder you may copy thi document in whole or in part a long a you do try to make money off it or pretend that you write it art mulder art do not be conform to thi world department of computing science but be transform by the renewal university of albertum edmonton canada of ymy mind roman 