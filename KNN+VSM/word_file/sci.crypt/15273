from ji john ioannidi subject re source of random bite on a unix workstation in article bet bennett todd salomon brother inc ny write i hear about thi solution and it sound good then i hear that folk be experience time of second to run thi on reasonably-configured workstation i not will to add that much delay to someone login proces my approach skip take a second or two to run i consider write the be-all and end-all of solution that launch the and simultaneously try to suck bite off the net and if the net should be sit so idle that it ca get after compression before finish use the thi way i could have guarantee good bite and a deterministic upper bind on login time and still have the common case of login take only a couple of extra second second to hash of core i bet i know who the source of ymy information be no it not acceptable if it part of ymy login proces but if you be go to use network traffic a the source of pseudo-random information do the right thing and pa it through a cryptographic hash function not a compressor aside from the fact that it will run faster it will give better result think of a cryptographic hash a a function that distill randomnes something along the line of etherfind t x n dd should do the trick t gife you timestamp and the lack of u make sure that dd do not get ten line a oppose to ten k the above take a couple of second on a lightly-loaded ethernet bennett bet ji 