from crypt-comment subject cryptography faq mathematical cryptology archive-name last-modified faq for part mathematical cryptology thi be the fourth of ten part of the faq the part be mostly independent but you should read the first part before the rest we do have the time to send out miss part by mail so do ask note such a refer to the reference list in the last part the section of thi faq be available vium anonymou ftp to a xx the cryptography faq be post to the newsgroup and every day content in mathematical term what be a private-key cryptosystem what be an attack what the advantage of formulate all thi mathematically why be the one-time pad secure what a ciphertext-only attack what a known-plaintext attack what a chosen-plaintext attack in mathematical term what can you say about brute-force attack what a key-guessing attack what entropy in mathematical term what be a private-key cryptosystem a private-key cryptosystem consist of an encryption system e and a decryption system d the encryption system e be a collection of function index by key k map some set of plaintext p to some set of ciphertext c similarly the decryption system d be a collection of function such that p p for every plaintext p that be succesful decryption of ciphertext into plaintext be accomplish use the same key index a wa use for the correspond encryption of plaintext into ciphertext such system wherein the same key value be use to encrypt and decrypt be also know a symmetric cryptoystem what be an attack in intuitive term a passive attack on a cryptosystem be any method of start with some information about plaintext and their correspond ciphertext under some unknown key and figure out more information about the plaintext it possible to state mathematically what thi mean here we go fix function f g and h of n variable fix an encryption system e and fix a distribution of plaintext and key an attack on e use g assume f give h with probability p be an algorithm a with a pair f g of input and one output h such that there be probability p of compute h h if we have f f and g g note that thi probability depend on the distribution of the vector k the attack be trivial or pointles if there be probability at least p of compute h h if f f and g g here range uniformly over the possible ciphertext and have no particular relation to in other word an attack be trivial if it do actually use the encryption an attack be call one-ciphertext if n two-ciphertext if n and so on what the advantage of formulate all thi mathematically in basic cryptology you can never prove that a cryptosystem be secure read part we keep say a strong cryptosystem must have thi property but have thi property be no guarantee that a cryptosystem be strong in contrast the purpose of mathematical cryptology be to precisely formulate and if possible prove the statement that a cryptosystem be strong we say for example that a cryptosystem be secure against all passive attack if any nontrivial attack against the system a define above be too slow to be practical if we can prove thi statement then we have confidence that my cryptosystem will resist any passive cryptanalytic technique if we can reduce thi statement to some well-known unsolved problem then we still have confidence that the cryptosystem be easy to break other part of cryptology be also amenable to mathematical definition again the point be to explicitly identify what assumption we make and prove that they produce the desire result we can figure out what it mean for a particular cryptosystem to be use properly it just mean that the assumption be valid the same methodology be useful for cryptanalysi too the cryptanalyst can take advantage of incorrect assumption often he can try to construct a proof of security for a system see where the proof fail and use these failure a the start point for hi analysi why be the one-time pad secure by definition the one-time pad be a cryptosystem where the plaintext ciphertext and key be all string say byte string of some length m and p be just the sum let say the exclusive or of k and p it be easy to prove mathematically that there be no nontrivial single-ciphertext attack on the one-time pad assume a uniform distribution of key note that we do have to assume a uniform distribution of plaintext here the proof let a be an attack an algorithm take two input f g and produce one output h with some probability p that h h p whenever f f p and g g p g g k p then because the distribution of k be uniform and independent of p the distribution of k p must also be uniform and independent of p but also the distribution of c be uniform and independent of p hence there be probability exactly p that h h p whenever f f p and g g c over all p and c thu a fortiorus a be trivial on the other hand the one-time pad be not secure if a key k be use for more than one plaintext there be nontrivial multiple-ciphertext attack so to be properly use a key k must be throw away after one encryption the key be also call a pad thi explain the name one-time pad what a ciphertext-only attack in the notation above a ciphertext-only attack be one where f be constant given only some information g about n ciphertext the attack ha to have some chance of produce some information h about the plaintext the attack be trivial if it ha just a good a chance of produce h when give g for random for example say g c c and say h p be the first bite of p we can easily write down an attack the guess attack which simply guess that h p be thi attack be trivial because it do use the ciphertext it ha a fifty-fifty chance of guess correctly no matter what on the other hand there be an attack on rsa which produce one bite of information about p with succes use c if it be feed a random c then the succes rate drop to so thi be a nontrivial attack what a known-plaintext attack the classic known-plaintext attack ha f g and h depend only on in other word give two ciphertext and and one decryption the known-plaintext attack should produce information about the other decryption note that known-plaintext attack be often define in the literature a produce information about the key but thi be pointles the cryptanalyst generally care about the key only insofar a it let him decrypt further message what a chosen-plaintext attack a chosen-plaintext attack be the first of an increasingly impractical series of active attack on a cryptosystem attack where the cryptanalyst fee datum to the encryptor these attack do fit into my model of passive attack explain above anyway a chosen-plaintext attack let the cryptanalyst choose a plaintext and look at the correspond ciphertext then repeat until he ha figure out how to decrypt any message more absurd example of thi sort of attack be the chosen-key attack and chosen-system attack a much more important form of active attack be a message corruption attack where the attacker try to change the ciphertext in such a way a to make a useful change in the plaintext there be many easy way to throw kink into all of these attack for instance automatically encrypt any plaintext p a t h r p where t be a time-key sequence number choose anew for each message r be a random number and h be a one-way hash function here comma mean concatenation and plu mean exclusive-or in mathematical term what can you say about brute-force attack consider the follow known-plaintext attack we be give some plaintext p and ciphertext c we also give a ciphertext we run through every key k when we find k such that for every i n we print if n be big enough that only one key work thi attack will succeed on valid input all the time while it will produce correct result only once in a blue moon for random input thu thi be a nontrivial attack it only problem be that it be very slow if there be many possible key what a key-guessing attack what entropy say somebody be use the one-time pad but be choose key randomly and uniformly from all m-bit message a he wa suppose to for my security proof in fact say he know to prefer key which be english word then a cryptanalyst can run through all english word a possible key thi attack will often succeed and it much faster than a brute-force search of the entire keyspace we can measure how bad a key distribution be by calculate it entropy thi number e be the number of real bite of information of the key a cryptanalyst will typically happen acros the key within guess e be define a the sum of where be the probability of key k 