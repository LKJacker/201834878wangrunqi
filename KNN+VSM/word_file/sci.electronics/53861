from whit john whitmore subject re minimal boolean circuit in article djimenez daniel jimenez write suppose we have a boolean function which be a minimal sum-of-products derive from a k-map or something like thi f a b c d bc acd abc the book on logic design i have consult all seem to imply that thi be where the analysi end but by factor out the a term in the function we can get fewer gate f a b c d bc a cd bc which yield gate ye but the minimization of gate be important in part because of timing consideration a ttl gate ha the basic structure of and an inversion of a sum of a product be just exactly one gate delay the reason to find a minimal sum of product be that thi match a hardware optimization a positive-or gate such a the solution use ha two gate delay and there another gate delay in the second term so that the second solution while simpler in logic symbol can be expect to be something le than optimal in the real world ecl be similar to ttl in that it can support an gate with the minimum delay unlike ttl you get both true and inverse output for when use ecl pal be basically large programmable gate with ymy choice of internal connection between the variou section and perhap some latch so a minimum sum of product also be a way to shoehorn a logic design into a few pal it not comparably easy to design with a minimization of logic gate but some software package claim to allow you to do so and will take just about any me of gate a a nodelist with series logic ics and produce a description of a logic cell array to do the same job xilinx xact software do thi by treat each logic block a a macro and expand it all out then simplify john whitmore 